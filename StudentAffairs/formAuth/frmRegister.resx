<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="captionImage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>